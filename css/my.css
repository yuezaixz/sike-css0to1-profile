body {
  background-image: url(http://uploads.striking.ly/page/images/backgrounds/bg5.jpg);
  background-attachment: fixed; /* 使背景图不随页面的滚动而滚动 */
  background-size: cover; /*使背景图始终填满整个屏幕*/
  background-position: center;/*使背景图居中*/

  font-family: 'Open Sans','helvetica',arial,sans-serif;
  font-weight: 300;
  color: #62686f;
}
html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

h1, h2, h3, h4, h5, h6 {
  color: #333;
  font-weight: 300;
}
/* container这个div是一个居中包围框 */
.container {
  width: 960px;/* 居中包围框的宽度 */
  margin: 0 auto; /* 0 auto 让浏览器自动计算左右 margin，使外包围框居中，这个居中技巧只限于有设置宽度的容器 */
  margin-top:100px;
}
/*
你常常会看到网页选择 960px 这个宽度，这是因为 一般浏览器是 1024 宽，
加上滚动条就是 1000-1004， 所以网页的宽度都是小于 1000。而 960 是
1000 以内公约数最多的数字，方便做 grid。
*/

.main-header{
  background-image: url(../img/banner.jpg);
  text-align: center;/* 头部容器居中效果 */ 
  padding:1px;
  color:#FFFFFF;
}
.main-header h1{/* h1记得加，不然会随全局的那个，因为h1为更亲近 */
  font-weight: 300;
  font-size: 50px;
  font-family: 'Open Sans','helvetica',arial,sans-serif;/* 谷歌字体，注意要include */
  text-shadow: 0 1px rgba(0,0,0,0.3);/* 阴影 */
}

.main-header__avatar{
  /* 排序：如果我们把定位还有盒模型相关的属性放前面，看起来会清晰很多 */
  display: block;/* 把img元素设置为块 */
  margin: 0 auto;
  margin-top: -70px;/* 上头像顶部突出 */
  border: 3px solid white;
  width: 130px;
  height: 130px;

  border-radius: 999px;
  box-shadow: 0 0px 2px 1px rgba(0,0,0,0.2);/* 头像圆 */
}
/*
排版的顺序
定位属性: position, float, z-index, clear
盒模型相关属性: padding, margin, display, width, height, border
字体相关
CSS2 视觉相关属性 (background)
CSS3 属性 (border-radius, box-shadow)*/

.main-nav{
  text-align: center;/* 头部容器居中效果 */
  background-color: #333;
}

.main-nav ul{
  list-style: none;/* 把列表装饰去掉*/
  padding: 0;
  margin: 0;/*这两个，把浏览器默认的间隔清除*/
}
.main-nav ul li{
  /* inline 元素只能设置其左右内边距和外边距，而不能设置其高度和上下内外边距。
  和垂直高度有关的 padding, margin, height 都无效
  display: inline;*/
  display:inline-block;/*inline-block 元素可以简单理解为对外表现为行元素，而对内表现为块元素。*/
  margin: 15px 10px;
}
.main-nav ul li a {
  color: #fff;
  font-size: 0.9rem;
  font-weight: 300;
  text-transform: uppercase;
  text-decoration: none;
}
.main-nav ul li a:hover {
  text-decoration: underline;/*聚焦时候的样式*/
}
/*
HTML5的语义标签
导航模块应该使用 nav
文章模块就应该使用 article
头部模块应该使用 header
无编号列表模块应该使用 ul
*/

/*给背景加上白色背景*/
.info-section {
    background-color: #fff;
    padding: 30px 60px;
    background-size: contain;
}
.info-section header h2 {
  font-size: 28px;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 3px;
}
.info-section header h2:after{
  content: "";
  border-bottom: 3px solid black;
  display:block;
  width:80px;
  margin:15px auto;
}
.info-section__description {
  font-style: italic;
  text-align: center;
  margin-bottom: 60px;
}

.info-section .whatido__skill-list{
  list-style: none;/* 把列表装饰去掉*/
  padding: 0;
  margin: 0;/*这两个，把浏览器默认的间隔清除*/
  overflow: hidden;
  /*overflow: hidden;把飘动元素算在自己的高度里面*/
  /*默认的 overflow: visible 等于是说 “我允许容器里面的内容凸出这个容器”*/
}

.info-section .whatido__skill-list li{
  display:inline-block;
  margin: 15px 10px;
}

.whatido__skill{
  background-repeat: no-repeat;
  /*设置了的话，就会把文字包含在图片底下
  background-size: contain;*/
  background-position: center top;
  width:30%;
  float: left;/*让子元素向左飘动*/
  text-align: center;
  padding-top:120px;
}

.whatido__skill--code {
  background-image: url(../img/skill-code.png);
}

.whatido__skill--design {
  background-image: url(../img/skill-design.png);
}

.whatido__skill--product {
  background-image: url(../img/skill-product.png);
}

/* 在.clearfix之后添加一个飘动的元素，和overflow: hidden 效果一模一样，就是实现原理不一样。*/
.clearfix:after {
  content:"";/*在 clearfix 这个元素之后加上一个空的伪元素*/
  display:table;
  clear:both;/*使伪元素清除飘动元素*/
}
.info-section .education-experience__list li{
  margin-bottom: 30px;
  overflow: hidden;
}
.info-section .education-experience__list li img{
  width: 180px;
  float: left;/*让子元素向左飘动*/
}

.bfc_content{
  overflow: hidden;
  padding-left: 20px;
}

.photos__list{
  padding: 0; 
  overflow: hidden;
}

.photos__list li{
  float: left;
  width: 25%;
  padding: 5px 5px;
  border-width: 1px;
}
.photos__list li img{
  width: 100%;
}

.get-in-touch__list{
  overflow: hidden;
}

.get-in-touch__list li{
  float: left;
  text-align: center;
  width: 25%;
}
.get-in-touch__list li img{
  width: 140px;
}
.get-in-touch__list li p{
  text-align: center;
}

.contact input,
.contact textarea {
  border: 1px solid #ccc;
  border-radius: 4px;
  margin-bottom: 20px;
  padding: 8px;
  width: 100%;
}

.contact label {
    position: absolute;
    width: 20%;
    /*text-align: right;*/
}

.contact button {
  border: none;
  border-radius: 9999px;

  background: #ffd524;

  cursor: pointer;
  text-shadow: 0 1px 1px rgba(0,0,0,0.2);
  color: #fff;
  box-shadow: 0 3px 0 #daae1d;
  width: 100%;
}

.contact_form{
  width: 40%;
  text-align: center;
  position: relative;
  margin: 0 auto;/*会自动计算左右距离，否则不居中*/
}

.contact_form input{
  padding: 8px;
  left: -20%;
} 

.contact label {
    position: absolute;
    width: 20%;
    /*text-align: right;*/
}
.contact .name{
    left: -20%;
    top:5%
}

.contact .email {
    left: -20%;
    top: 30%;
}

.contact .message {
    left: -23%;
    top: 60%;
}

/*做绝对定位时记得把父元素设置为 position: relative
标签和输入栏内容应该对齐*/

